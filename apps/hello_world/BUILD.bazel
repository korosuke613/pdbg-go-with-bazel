load("@rules_go//go:def.bzl", "go_binary", "go_cross_binary", "go_library")

go_binary(
    name = "hello_world",
    embed = [":hello_world_lib"],
    visibility = ["//visibility:public"],
)

[
    go_cross_binary(
        name = "hello_world_" + os + "_" + arch,
        platform = "@rules_go//go/toolchain:" + os + "_" + arch,
        target = ":hello_world",
    )
    for os in [
        "linux",
        "windows",
        "darwin",
    ]
    for arch in [
        "amd64",
        "arm64",
    ]
]

go_library(
    name = "hello_world_lib",
    srcs = [
        "main.go",
        "os_darwin.go",
        "os_linux.go",
        "os_windows.go",
    ],
    importpath = "github.com/korosuke613/go-bazel-playground/apps/hello_world",
    visibility = ["//visibility:private"],
    deps = [
        "//internal/reverse",
        "@com_github_google_uuid//:uuid",
    ] + select({
        "@rules_go//go/platform:windows": [
            "//internal/windows",
        ],
        "//conditions:default": [],
    }),
)

# Docker イメージをビルドするためのルール
load("//build_tools/macros:oci.bzl", "go_oci_image")

go_oci_image(
    name = "image",
    srcs = [":hello_world"],
    base = "@distroless_static_debian12",
    entrypoint = ["/hello_world"],
    repo_tags = ["hello_world:latest"],
    repository = "ghcr.io/korosuke613/go-bazel-playground-hello-world",
)
# bazel run //apps/hello_world:oci_image_load で Docker イメージをビルドしてロードできる
